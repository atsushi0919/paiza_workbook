# ローリングハッシュとは (paizaランク A 相当)
# https://paiza.jp/works/mondai/hash_advanced/rolling_advanced__hash1

INPUT1 = <<"EOS"
5
paiza
EOS
OUTPUT1 = <<"EOS"
112
200000804
660005166
758032644
175605722
EOS

INPUT2 = <<"EOS"
10
1234567890
EOS

OUTPUT2 = <<"EOS"
49
900000365
170002312
271014612
907392103
16570263
404392714
947674143
270347118
503186883
EOS

# 定数
B = 10 ** 8 + 7
MOD = 10 ** 9 + 7

# ハッシュ値のリストを返す
def hash(s)
  h = [0]
  s.chars.each do |c|
    h << (B * h[-1] + c.ord) % MOD
  end
  h[1..]
end

# 入力
_, s = $stdin.read.split

# 出力
puts hash(s).join("\n")

=begin
方針
1 文字目から i 文字目 (1 ≦ i ≦ L) までの文字列のハッシュ値を愚直に一つずつ計算しようとすると、
毎回 1 文字目から i 文字目までの反復を繰り返し、計算量が O(L^2) かかってしまうため制限時間に間に合いません。

このハッシュ関数の性質を利用して計算時間を短くしましょう。
文字列 S の 1 文字目から k 文字目までの文字列 S_k のハッシュ関数と、 
k+1 文字目までの文字列 S_{k+1} のハッシュ関数は次のように定義されています。

H(S_k) =
  (
    S の 1 文字目の文字コード * B^(k-1) +
    S の 2 文字目の文字コード * B^(k-2) + ... +
    S の k 文字目の文字コード * B^0
  ) % mod

H(S_{k+1}) =
  (
    S の 1 文字目の文字コード * B^k + 
    S の 2 文字目の文字コード * B^(k-1) + ... + 
    S の k 文字目の文字コード * B^1 + 
    S の k+1 文字目の文字コード * B0
  ) % mod

このことから、H(S_{k+1}) は H(S_k) を使って、次のように書き換えることができます。

H(S_{k+1}) = (B * H(S_k) + (S の k+1 文字目の文字コード) * B^0) % mod

この性質を使うことで、1 文字目から i 文字目までの文字列のハッシュ値を再帰的に求めることができ、
計算量 O(L) で実行することができます。

B = 10**8+7
mod = 10**9+7
l = int(input())
s = input()
H = [0]
for i in range(l):
  h_value = (H[-1]*B + ord(s[i])) % mod
  print(h_value)
  H.append(h_value)

ハッシュ関数は文字列検索を高速におこなうアルゴリズムに応用することができます。
そのアルゴリズムがローリングハッシュと呼ばれるものです。
本問では、文字列検索をする前に、このローリングハッシュに用いられるハッシュ関数の特徴について考えてみましょう。

長さが L の文字列 S が与えられます。
以下のハッシュ関数 H を用いて、
この文字列の先頭の文字 ( 1 文字目) から i 文字目 (1 ≦ i ≦ L) までの文字列 s_i のハッシュ値をすべて計算してください。

文字列 s の長さを m として、

H(s) = (s の 1 文字目の文字コード * B^(m-1) + s の 2 文字目の文字コード * B^(m-2) + ... + s の m 文字目の文字コード * B^0) % mod

ただし、B = 108+7, mod = 109+7 とし、文字コードは ASCII に従って変換してください。
▼　下記解答欄にコードを記入してみよう

入力される値
L
S

1 行目に文字列の長さを表す整数 L が与えられます。

2 行目に長さが L の文字列 S が与えられます。

入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認ください
期待する出力
L 行出力してください。i (1 ≦ i ≦ L) 行目には、文字列 S の 1 文字目から i 文字目 までの文字列 s のハッシュ値 H(s_i)
を出力してください。

また、末尾に改行を入れ、余計な文字、空行を含んではいけません。

H(s_1)
H(s_2)
...
H(s_L)
条件
すべてのテストケースにおいて、以下の条件をみたします。


1 ≦ L ≦ 90000

S は半角英数字で構成される長さ L の文字列
入力例1
5
paiza

出力例1
112
200000804
660005166
758032644
175605722

入力例2
10
1234567890

出力例2
49
900000365
170002312
271014612
907392103
16570263
404392714
947674143
270347118
503186883
=end
