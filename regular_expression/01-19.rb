# エスケープシーケンスの検索 (paizaランク C 相当)
# https://paiza.jp/works/mondai/regular_expression/regular_expression__expression_19

p`dd`=~/\w{3}-\d{3,4}/

=begin
パターン: 半角英数字記号 3 文字の後に記号 - が続き、その後に 3 桁または 4 桁の数字が続く文字列

問題にチャレンジして、ユーザー同士で解答を教え合ったり、コードを公開してみよう！

シェア用URL:
問題文のURLをコピーする
 下記の問題をプログラミングしてみよう！
正規表現の拡張的な機能として、エスケープシーケンスがあります。
エスケープシーケンスは、特殊な意味を持つ記号で、正規表現の中で 1 つの文字として扱われます。
代表的なエスケープシーケンスをいくつか紹介します。

・\d 半角数字 1 文字 (d は digit の略)
・\D 半角数字以外の 1 文字
・\s 空白文字 (スペース, タブ, 改行) 1 文字 (s は space の略)
・\S 空白文字以外の 1 文字
・\w 半角英数字記号 1 文字 (w は word の略)
・\W 半角英数字記号以外の 1 文字
・\n 改行文字
・\t タブ文字
・\A 文字列の先頭
・\Z 文字列の末尾

エスケープシーケンスを用いることで、より簡潔に正規表現を記述することができます。
なお、言語やライブラリによっては使用できないエスケープシーケンスもあるので注意してください。

文字列 S が与えられるので、正規表現を用いて、文字列 S において以下のパターンが何文字目から出現するかを求めてください。

パターン: 半角英数字記号 3 文字の後に記号 - が続き、その後に 3 桁または 4 桁の数字が続く文字列

ただし、検索対象のパターンが複数回出現する場合は、最初に出現する位置を出力してください。
また、文字列の先頭の位置を 0 として、各文字の位置を左から順に 0, 1, 2, ... とします。

▼　下記解答欄にコードを記入してみよう

入力される値
s

・ 1 行目に、検索対象の文字列 s が与えられます。

入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認ください
期待する出力
文字列 S において、パターンが最初に出現する位置を整数で 1 行で出力してください。

また、末尾に改行を入れ、余計な文字を含んではいけません。

条件
すべてのテストケースにおいて、以下の条件をみたします。

・ S は ASCII 文字 (半角英数字記号) で構成される 1000 文字以下の文字列
・ S には、指定されたパターンが必ず 1 回以上出現する

入力例1
JP-8000 JPN-1234

出力例1
8
=end