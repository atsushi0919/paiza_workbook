# 問題 3 : 一致する接頭辞と接尾辞 3 (paizaランク B 相当)
# https://paiza.jp/works/mondai/mp_kmp_algorithm/mp_kmp_algorithm__naive_step3

INPUT1 = <<"EOS"
3
1 2 3 1 2 3 1 2 3
EOS

OUTPUT1 = <<"EOS"
0
0
0
1
2
3
4
5
6
EOS

# 接頭辞・接尾辞の最長共通数列の長さを返す
def num_of_common_chars(a)
  n = a.length

  (1...n).each { |i| return n - i if a[..n - i - 1] == a[i..] }

  return 0
end

# 入力
n, *a = $stdin.read.split.map(&:to_i)

# A_i について接頭辞・接尾辞の最長共通数列の長さを求める
results = (0...n * n).map { |i| num_of_common_chars(a[..i]) }

# 出力
puts results

=begin
シェア用URL:
問題文のURLをコピーする
 下記の問題をプログラミングしてみよう！
1 以上 N 以下の整数がそれぞれ N 個ずつ含まれる長さ N^2 の数列 A が入力として与えられます。

1 ≦ i ≦ N^2 を満たすすべての i それぞれについて、以下の問題に答えてください。
・A の 1 番目から i 番目までの連続部分列を A' とする。A' の接頭辞であり、接尾辞でもあるような数列のうち最長のものの長さを出力してください。

ここで、数列 A に対して、接頭辞と接尾辞を以下のように定義します。
- 接頭辞 : 数列 A の末尾から 1 要素以上取り除いた数列。
- 接尾辞 : 数列 A の先頭から 1 要素以上取り除いた数列。

ただし、接頭辞、接尾辞は空数列 φ を含むものとします。



例えば A = (1, 2, 3, 1, 2, 1, 3, 2, 3) に対して i = 5 の場合、
A の 1 番目から i 番目までの連続部分列は (1, 2, 3, 1, 2) なので、
・接頭辞 : { φ, (1), (1, 2), (1, 2, 3), (1, 2, 3, 1) }
・接尾辞 : { φ, (2), (1, 2), (3, 1, 2), (2, 3, 1, 2) }
となり、数列 (1, 2) がどちらにも含まれている数列の中で最長なので、2 が答えとなります。

▼　下記解答欄にコードを記入してみよう

入力される値
入力は以下のフォーマットで与えられます

N
A_1 A_2 ... A_N^2

1 行目には数列 A の要素の種類数を表す整数 N が与えられ、2 行目には数列 A の N^{2} 個の要素が空白区切りで与えられます。

入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認ください
期待する出力
1 ≦ i ≦ N^2 を満たす i それぞれについて、
i 行目に
・A の 1 文字目から i 文字目までの連続部分列について、接頭辞であり、接尾辞でもあるような数列のうち最長のものの長さを表す整数
を出力してください。
ただし、最後には改行を入れ、
余計な文字や空白、空行を出力しないようにしてください。

条件
すべてのテストケースにおいて、以下の条件を満たします。
・2 ≦ N ≦ 40
・数列 A には、1 以上 N 以下の整数がちょうど N 個ずつ含まれる。
・|A| = N^2
・1 ≦ A_{i} ≦ N

入力例1
3
1 2 3 1 2 3 1 2 3

出力例1
0
0
0
1
2
3
4
5
6
=end
