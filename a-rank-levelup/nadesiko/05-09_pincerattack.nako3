# いびつなリバーシ対戦 (paizaランク A 相当)
# https://paiza.jp/works/mondai/a_rank_level_up_problems/a_rank_pincerattack_boss


●（入力文字列の）メイン処理とは
　　### 入力処理 ###
　　入力行配列＝入力文字列をトリムして改行で区切る
　　Ｈ、Ｗ、Ｎ、Ｔ＝入力行配列の０から１を配列取り出しして、「 」で区切る
　　盤面配列＝入力行配列の０からＨを配列取り出し
　　ｉで０からＨ－１まで繰り返す
　　　　盤面配列【ｉ】＝盤面配列【ｉ】を「」で区切る
　　ここまで
　　棋譜配列＝入力行配列の０からＴを配列取り出し
　　ｉで０からＴ－１まで繰り返す
　　　　棋譜配列【ｉ】＝棋譜配列【ｉ】を「 」で区切る
　　ここまで
　　
　　### 方向の設定 ###
　　方向リスト＝【【－１、０】、
　　　　　　　　　【－１、１】、
　　　　　　　　　【０、１】、
　　　　　　　　　【１、１】、
　　　　　　　　　【１、０】、
　　　　　　　　　【１、－１】、
　　　　　　　　　【０、－１】、
　　　　　　　　　【－１、－１】】
　　
　　### 繰り返し処理 ###
　　棋譜で棋譜配列を反復
　　　　記号、基点Ｙ、基点Ｘ＝棋譜
　　　　盤面配列【基点Ｙ】【基点Ｘ】＝記号
　　　　### 8方向を探索 ###
　　　　移動量で方向リストを反復
　　　　　　移動量Ｙ、移動量Ｘ＝移動量
　　　　　　現在Ｙ＝基点Ｙ＋移動量Ｙ
　　　　　　現在Ｘ＝基点Ｘ＋移動量Ｘ
　　　　　　挟んだ＝いいえ
　　　　　　### 盤面外・障害物・記号まで進む ###
　　　　　　真の間繰り返す
　　　　　　　　次Ｙ＝現在Ｙ＋移動量Ｙ
　　　　　　　　次Ｘ＝現在Ｘ＋移動量Ｘ
　　　　　　　　もし（次Ｙ＜０）または（次Ｙ≧Ｈ）なら、抜ける
　　　　　　　　もし（次Ｘ＜０）または（次Ｘ≧Ｗ）なら、抜ける
　　　　　　　　もし（盤面配列【次Ｙ】【次Ｘ】＝「#」）なら、抜ける
　　　　　　　　もし（盤面配列【次Ｙ】【次Ｘ】＝記号）なら
　　　　　　　　　　挟んだ＝はい
　　　　　　　　　　抜ける
　　　　　　　　ここまで
　　　　　　　　現在Ｙ＝次Ｙ
　　　　　　　　現在Ｘ＝次Ｘ
　　　　　　ここまで

　　　　　　### 石を置く ###
　　　　　　もし挟んだなら
　　　　　　　　（現在Ｙ＜＞基点Ｙ）または（現在Ｘ＜＞基点Ｘ）の間繰り返す
　　　　　　　　　　もし盤面配列【現在Ｙ】【現在Ｘ】＜＞「#」なら
　　　　　　　　　　　　盤面配列【現在Ｙ】【現在Ｘ】＝記号
　　　　　　　　　　ここまで
　　　　　　　　　　現在Ｙ＝現在Ｙ－移動量Ｙ
　　　　　　　　　　現在Ｘ＝現在Ｘ－移動量Ｘ
　　　　　　　　ここまで
　　　　　　ここまで
　　　　ここまで
　　ここまで

　　### 出力文字列を作る ###
　　結果行配列＝【】
　　盤面行で盤面配列を反復する
　　　　盤面行を「」で配列結合して、それを結果行配列に配列追加する
　　ここまで
　　結果行配列を改行で配列結合して戻す
ここまで

「/dev/stdin」から開いて入力文字列に代入してください。
入力文字列のメイン処理を表示してください。お願いします。


/*
いびつなリバーシ対戦 (paizaランク A 相当)
問題にチャレンジして、ユーザー同士で解答を教え合ったり、コードを公開してみよう！

シェア用URL:
https://paiza.jp/works/mondai/a_rank_level_up_problems/a_rank_pincerattack_boss
問題文のURLをコピーする
 チャレンジする言語

得意な言語を選択してください
コードを書いて解いてみる
 チケット使用済
問題
 下記の問題をプログラミングしてみよう！
1 から N のプレイヤー番号が与えられた N 人でいびつなオセロの対戦をします。
盤面・ゲームをする人数・合計のターン数・各行動についての情報が与えられます。
盤面に穴の空いているマスは '#' , 何も置かれていないマスは '.' になっています。

プレイヤー達は、各行動ごとに次の操作をおこないます。

・ 盤面のマス(Y_i, X_i)に石を置く。既に相手の石が置かれている場合は相手の石を自分の石に置き換える。
・ 次に、縦横斜めに自分の石ではさんだ連続した穴の空いていないマスに自分の石を置きます。相手の石が置かれている場合は相手の石を自分の石に置き換えて、操作を終了する。

操作を終えた後の盤面を出力してください。
ただし、番号 i のプレイヤーの石のあるマスを i として出力してください。

なお、マスの座標系は左上端のマスの座標を ( y , x ) = ( 0 , 0 ) とし、
下方向が y 座標の正の向き、右方向が x 座標の正の向きとします。

例えば、図 1 の状態から赤いマスに B さんが石を置くと、図 2 の状態になります。
図 3 の状態から赤いマスに C さんが石を置くと、図 4 の状態になります。
図 5 の状態から赤いマスに A さんが石を置くと、図 6 の状態になります。


図１

図２

図３

図４

図５

図６

入力される値
H W N n     
S_0     
...     
S_(H-1)     
p_1 Y_1 X_1        
...     
p_n Y_n X_n


・ 1 行目では、盤面の行数 H ,列数 W , プレイヤーの人数 N , 全プレイヤーの合計ターン数 n が与えられます。
・ 続く H 行のうち i 行目 (0 ≦ i < H) には、盤面の i 行目の文字をまとめた文字列 S_i が与えられ、S_i の j 文字目は、盤面の i 行目の j 列目に書かれている文字を表します。
・ 続く n 行のうち i 行目 (1 ≦ i ≦ n) には、i 回目の操作で石を置く人のプレイヤー番号 p_i と、その人が石を置く座標 Y_i X_i が与えられます。

入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認ください
期待する出力
H 行での出力

・ 操作後の盤面を H 行で出力してください。


T_0
...
T_(H-1)
条件
すべてのテストケースにおいて、以下の条件をみたします。

・ 1 ≦ H, W ≦ 20
・ 1 ≦ N ≦ 9
・ 1 ≦ n ≦ 100
・ 0 ≦ Y_i < H, 0 ≦ X_i < W
・ 1 ≦ p_i ≦ N
・ S は W 文字の文字列
・ S の各文字は '.' または '#'
・ S[Y_i][X_i] = '.'

入力例1
3 3 2 4
...
...
.#.
1 0 0
2 2 0
1 0 2
2 2 2

出力例1
111
...
2#2

入力例2
20 20 5 50
.....#..............
....................
....................
.#..................
#...................
.........#..........
........#.#.........
............#.......
....................
.....#..............
.#..................
....................
............#.......
....#...............
...................#
....................
.................#..
....................
....#...........#..#
...........#.#......
3 18 14
1 15 17
4 11 10
4 14 14
5 5 6
3 17 3
3 17 19
4 15 2
2 18 13
4 6 6
1 1 7
5 6 15
5 6 14
3 15 17
4 16 10
1 9 6
4 9 15
1 1 10
3 16 5
5 16 3
5 7 11
4 4 2
1 2 2
1 3 7
1 15 16
1 14 0
4 18 0
3 8 12
3 7 4
2 13 2
3 8 6
1 16 1
2 12 3
2 12 7
4 4 8
2 3 13
4 14 9
5 12 18
3 8 0
5 8 15
1 17 18
2 18 0
4 16 1
3 3 6
2 8 2
2 2 6
4 6 6
1 11 8
4 7 4
3 8 5

出力例2
.....#..............
.......1111.........
..1...211...........
.#....21.....2......
#.4443234....2......
..4433243#...2......
..444343#3#..255....
..3.433...35#2.5....
33333342222222.5....
.3224#33...3.2.4....
.#2.24433.3..2......
..23.244134..2......
..223224334.#2....5.
..2.#2.34.3..2......
1.4.24344443.24....#
..42.3.3..2.32..13..
.4253333333232333#3.
.2.33333333322333313
2...#........23.#..#
...........#.#......
*/