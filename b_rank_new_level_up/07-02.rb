# 【計算 2】疑似乱数 (paizaランク C 相当)
# https://paiza.jp/works/mondai/b_rank_new_level_up_problems/b_rank_new_level_up_problems__similar_randamize

INPUT1 = <<"EOS"
2 1000 5
EOS
OUTPUT1 = <<"EOS"
2
6
14
30
62
EOS
INPUT2 = <<"EOS"
172 8467 10
EOS
OUTPUT2 = <<"EOS"
172
4355
4136
336
7162
4321
6755
2053
6141
6516
EOS

# 入力
x, m, n = gets.split.map(&:to_i)

# 乱数生成 rnd_i = (X^i + X^{i-1} ... + X^1) mod M
s = 0
rnd = 1.upto(n).map do |i|
  s += x ** i
  s % m
end

# 出力
puts rnd.join("\n")

=begin
指定した範囲内の値を一様ランダムに出力する装置を乱数生成機といい、出力された数値を乱数といいます。
この乱数は乱択アルゴリズムなどで利用されており、IT の分野で大きな役割を果たしています。
この乱数を手元で再現する方法として疑似乱数というものがあります。
この疑似乱数は、乱数を得る代わりに事前に用意しておいた計算式の結果を乱数として採用するというものです。

この問題では試しに以下のような計算式によって定められた疑似乱数生成機を用いて、乱数を N 個(rnd_1, ..., rnd_N)生成してみましょう。

rnd_i = (X^i + X^{i-1} ... + X^1) mod M

▼　下記解答欄にコードを記入してみよう

入力される値
X M N

入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認ください
期待する出力
求めた N 個の乱数を改行区切りで出力してください。

条件
・1 ≦ X ≦ 1000
・1 ≦ M ≦ 100000
・1 ≦ N ≦ 20

入力例1
2 1000 5

出力例1
2
6
14
30
62

入力例2
172 8467 10

出力例2
172
4355
4136
336
7162
4321
6755
2053
6141
6516
=end
